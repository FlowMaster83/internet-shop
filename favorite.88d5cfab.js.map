{"mappings":"YAGA,IACiBA,ECFUC,EACnBC,EDAFC,EAAOC,SAASC,cAAc,YAC9BC,EAAgE,QAArDN,EAAAO,KAAKC,MAAMC,aAAaC,QEDzB,oBFCsD,IAArDV,IAAyD,GCF/CC,EDIJE,ECHfD,EDGKI,ECFRK,KACC,SAAAC,G,IAAGC,EAAED,EAAFC,GAAIC,EAAGF,EAAHE,IAAKC,EAAIH,EAAJG,K,MAAW,gBACXC,OAD2BH,EAAG,wCACjBG,OAAbF,EAAI,WACVE,OADmBD,EAAK,8BACnBC,OAALD,EAAK,qN,IAQZE,KAAK,IAERhB,EAAKiB,UAAYhB,C","sources":["src/favorite.js","src/helpers/createMarkup.js","src/common.js"],"sourcesContent":["import { common } from \"./common\";\nimport { createMarkup } from './helpers/createMarkup';\n\nconst list = document.querySelector('.js-list');\nconst favorite = JSON.parse(localStorage.getItem(common.KEY_FAVORITE)) ?? [];\n\ncreateMarkup(favorite, list)","// создан для того, чтобы не дублировать функцию createMarkup (не дублировать рендер разметки)\n\nfunction createMarkup(arr, list) {\n  const markup = arr\n    .map(\n      ({ id, img, name }) => `<li data-id=\"${id}\" class=\"js-card\">\n      <img src=\"${img}\" alt=\"${name}\" width=\"300\">\n      <h2>${name}</h2>\n      <p ><a class=\"js-info\" href=\"#\">More...</a></p>\n      <div>\n      <button class=\"js-favorite\">Add to favorite</button>\n      <button class=\"js-cart\">Add to cart</button>\n      </div>\n    </li>`\n    )\n    .join('');\n\n  list.innerHTML = markup;\n}\n\nexport { createMarkup };\n","// для удобства импорта/экспорта все ключи хранятся в виде объекта в отдельном файле common.js\n\nconst common = {\n  KEY_FAVORITE: 'favorite',\n  KEY_CART: 'cart',\n};\n\nexport { common }"],"names":["$19661b0c25203147$var$ref","list","markup","$19661b0c25203147$var$list","document","querySelector","$19661b0c25203147$var$favorite","JSON","parse","localStorage","getItem","map","param","id","img","name","concat","join","innerHTML"],"version":3,"file":"favorite.88d5cfab.js.map"}